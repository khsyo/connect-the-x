{"ast":null,"code":"var _jsxFileName = \"/Users/HeSong/Desktop/connect-the-x/connect-the-x/src/components/layout/JobDetail.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\n\nclass JobDetail extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = e => {\n      const job = this.props.job;\n      console.log(job.title);\n    };\n  }\n\n  render() {\n    const job = this.props.job;\n\n    if (job) {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"Job Detail\"), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Jesus Christ: \", job.city, \" \"), React.createElement(\"button\", {\n        className: \"btn btn-primary btn-block\",\n        onClick: this.handleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Apply now\"));\n    } else {\n      \"The job you are looking for is not available\";\n    }\n  }\n\n}\n\nJobDetail.propTypes = {\n  firestore: PropTypes.object.isRequired\n};\nexport default compose(firestoreConnect(props => [{\n  collection: \"jobs\",\n  storeAs: \"job\",\n  doc: props.match.params.id\n}]), connect(({\n  firestore: {\n    ordered\n  }\n}, props) => ({\n  job: ordered.job && ordered.job[0]\n})))(JobDetail);","map":{"version":3,"sources":["/Users/HeSong/Desktop/connect-the-x/connect-the-x/src/components/layout/JobDetail.js"],"names":["React","Component","PropTypes","connect","compose","firestoreConnect","JobDetail","handleClick","e","job","props","console","log","title","render","city","propTypes","firestore","object","isRequired","collection","storeAs","doc","match","params","id","ordered"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCM,WADgC,GAClBC,CAAC,IAAI;AAAA,YACTC,GADS,GACD,KAAKC,KADJ,CACTD,GADS;AAEjBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,KAAhB;AACD,KAJ+B;AAAA;;AAKhCC,EAAAA,MAAM,GAAG;AAAA,UACCL,GADD,GACS,KAAKC,KADd,CACCD,GADD;;AAGP,QAAIA,GAAJ,EAAS;AACP,aACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAqBA,GAAG,CAACM,IAAzB,MAFF,EAGE;AACE,QAAA,SAAS,EAAC,2BADZ;AAEE,QAAA,OAAO,EAAE,KAAKR,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAHF,CADF;AAYD,KAbD,MAaO;AACJ,oDAAD;AACD;AACF;;AAxB+B;;AA2BlCD,SAAS,CAACU,SAAV,GAAsB;AACpBC,EAAAA,SAAS,EAAEf,SAAS,CAACgB,MAAV,CAAiBC;AADR,CAAtB;AAIA,eAAef,OAAO,CACpBC,gBAAgB,CAACK,KAAK,IAAI,CACxB;AACEU,EAAAA,UAAU,EAAE,MADd;AAEEC,EAAAA,OAAO,EAAE,KAFX;AAGEC,EAAAA,GAAG,EAAEZ,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBC;AAH1B,CADwB,CAAV,CADI,EAQpBtB,OAAO,CAAC,CAAC;AAAEc,EAAAA,SAAS,EAAE;AAAES,IAAAA;AAAF;AAAb,CAAD,EAA6BhB,KAA7B,MAAwC;AAC9CD,EAAAA,GAAG,EAAEiB,OAAO,CAACjB,GAAR,IAAeiB,OAAO,CAACjB,GAAR,CAAY,CAAZ;AAD0B,CAAxC,CAAD,CARa,CAAP,CAWbH,SAXa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\n\nclass JobDetail extends Component {\n  handleClick = e => {\n    const { job } = this.props;\n    console.log(job.title);\n  };\n  render() {\n    const { job } = this.props;\n\n    if (job) {\n      return (\n        <div className=\"container\">\n          <h3>Job Detail</h3>\n          <span>Jesus Christ: {job.city} </span>\n          <button\n            className=\"btn btn-primary btn-block\"\n            onClick={this.handleClick}\n          >\n            Apply now\n          </button>\n        </div>\n      );\n    } else {\n      (\"The job you are looking for is not available\");\n    }\n  }\n}\n\nJobDetail.propTypes = {\n  firestore: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firestoreConnect(props => [\n    {\n      collection: \"jobs\",\n      storeAs: \"job\",\n      doc: props.match.params.id\n    }\n  ]),\n  connect(({ firestore: { ordered } }, props) => ({\n    job: ordered.job && ordered.job[0]\n  }))\n)(JobDetail);\n"]},"metadata":{},"sourceType":"module"}