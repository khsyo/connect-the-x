{"ast":null,"code":"var _jsxFileName = \"/Users/HeSong/Desktop/connect-the-x/connect-the-x/src/components/layout/JobDetail.js\";\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\n\nclass JobDetail extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = e => {\n      const job = this.props.job;\n      console.log(job);\n    };\n  }\n\n  render() {\n    const _this$props$job = this.props.job,\n          title = _this$props$job.title,\n          city = _this$props$job.city,\n          country = _this$props$job.country;\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, \"Job Detail\"), title, React.createElement(\"button\", {\n      className: \"btn btn-primary btn-block\",\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Apply now\"));\n  }\n\n}\n\nJobDetail.propTypes = {\n  firestore: PropTypes.object.isRequired\n};\nexport default compose(firestoreConnect(props => [{\n  collection: \"jobs\",\n  storeAs: \"job\",\n  doc: props.match.params.id\n}]), connect(({\n  firestore: {\n    ordered\n  }\n}, props) => ({\n  job: ordered.job && ordered.job[0]\n})))(JobDetail);","map":{"version":3,"sources":["/Users/HeSong/Desktop/connect-the-x/connect-the-x/src/components/layout/JobDetail.js"],"names":["React","Component","PropTypes","connect","compose","firestoreConnect","JobDetail","handleClick","e","job","props","console","log","render","title","city","country","propTypes","firestore","object","isRequired","collection","storeAs","doc","match","params","id","ordered"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,gBAAT,QAAiC,sBAAjC;;AAEA,MAAMC,SAAN,SAAwBL,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAChCM,WADgC,GAClBC,CAAC,IAAI;AAAA,YACTC,GADS,GACD,KAAKC,KADJ,CACTD,GADS;AAEjBE,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACD,KAJ+B;AAAA;;AAKhCI,EAAAA,MAAM,GAAG;AAAA,4BAC0B,KAAKH,KAAL,CAAWD,GADrC;AAAA,UACCK,KADD,mBACCA,KADD;AAAA,UACQC,IADR,mBACQA,IADR;AAAA,UACcC,OADd,mBACcA,OADd;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGF,KAFH,EAGE;AACE,MAAA,SAAS,EAAC,2BADZ;AAEE,MAAA,OAAO,EAAE,KAAKP,WAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAHF,CADF;AAYD;;AAnB+B;;AAsBlCD,SAAS,CAACW,SAAV,GAAsB;AACpBC,EAAAA,SAAS,EAAEhB,SAAS,CAACiB,MAAV,CAAiBC;AADR,CAAtB;AAIA,eAAehB,OAAO,CACpBC,gBAAgB,CAACK,KAAK,IAAI,CACxB;AACEW,EAAAA,UAAU,EAAE,MADd;AAEEC,EAAAA,OAAO,EAAE,KAFX;AAGEC,EAAAA,GAAG,EAAEb,KAAK,CAACc,KAAN,CAAYC,MAAZ,CAAmBC;AAH1B,CADwB,CAAV,CADI,EAQpBvB,OAAO,CAAC,CAAC;AAAEe,EAAAA,SAAS,EAAE;AAAES,IAAAA;AAAF;AAAb,CAAD,EAA6BjB,KAA7B,MAAwC;AAC9CD,EAAAA,GAAG,EAAEkB,OAAO,CAAClB,GAAR,IAAekB,OAAO,CAAClB,GAAR,CAAY,CAAZ;AAD0B,CAAxC,CAAD,CARa,CAAP,CAWbH,SAXa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\n\nclass JobDetail extends Component {\n  handleClick = e => {\n    const { job } = this.props;\n    console.log(job);\n  };\n  render() {\n    const { title, city, country } = this.props.job;\n    return (\n      <div className=\"container\">\n        <h3>Job Detail</h3>\n        {title}\n        <button\n          className=\"btn btn-primary btn-block\"\n          onClick={this.handleClick}\n        >\n          Apply now\n        </button>\n      </div>\n    );\n  }\n}\n\nJobDetail.propTypes = {\n  firestore: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firestoreConnect(props => [\n    {\n      collection: \"jobs\",\n      storeAs: \"job\",\n      doc: props.match.params.id\n    }\n  ]),\n  connect(({ firestore: { ordered } }, props) => ({\n    job: ordered.job && ordered.job[0]\n  }))\n)(JobDetail);\n"]},"metadata":{},"sourceType":"module"}