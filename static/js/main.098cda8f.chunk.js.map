{"version":3,"sources":["components/job-hero-banner-720W.jpg","components/spinner.gif","components/job-hero-banner-480W.jpg","components/job-hero-banner-320W.jpg","reducers/notifyReducer.js","store.js","components/actions/types.js","components/layout/Spinner.js","helpers/auth.js","components/layout/AppNavBar.js","components/layout/Footer.js","components/layout/HeroBanner.js","components/layout/Job.js","components/layout/Home.js","components/layout/JobDetail.js","components/layout/AddSkills.js","components/layout/AddJob.js","components/actions/notifyActions.js","components/auth/Register.js","components/auth/Login.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","message","messageType","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","store","compose","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","firestoreReducer","notify","state","arguments","length","undefined","action","type","Object","objectSpread","window","__REDUX_DEVTOOLS_EXTENSION__","Spinner","react_default","a","createElement","src","spinner","alt","style","margin","display","width","locationHelper","locationHelperBuilder","UserIsAuthenticated","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","allowRedirectBack","redirectPath","ownProps","getRedirectQueryParam","authenticatingSelector","_ref","_ref$firebase","auth","isInitializing","profile","isLoaded","authenticatedSelector","_ref2","isEmpty","UserIsNotAuthenticated","_ref3","_ref3$firebase","_ref4","AppNavBar","isAuthenticated","onLogout","e","preventDefault","_this","props","signOut","then","signout","history","push","catch","error","this","className","react_router_dom","to","data-toggle","data-target","id","email","href","role","onClick","uid","Component","firebaseConnect","connect","Footer","target","rel","HeroBanner","Job","handleApplyNow","console","log","handleSeeMore","concat","_this2","jobs","map","j","key","jobTitle","hiringCompany","city","country","salary","value","firestoreConnect","collection","ordered","Home","layout_HeroBanner","layout_Job","JobDetail","handleClick","job","srcSet","JobImageLarge","JobImageMedium","JobImageSmall","jobDescription","skillsList","s","layout_Spinner","storeAs","doc","match","params","AddSkills","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","skillsUI","skills","skill","i","name","onChange","handleSkillChange","handleAddSkill","handleDeleteSkill","AddJob","setState","defineProperty","onSubmit","newJob","_this$props","add","onSkillChange","newSkillsList","skey","addSkill","toConsumableArray","deleteSkill","deletedSkillsList","filter","alert","htmlFor","required","readOnly","placeholder","rows","layout_AddSkills","notifyUser","Register","isCompany","isJobSeeker","password","_this$state","createUserWithEmailAndPassword","success","user","currentUser","actionCodeSettings","url","handleCodeInApp","sendEmailVerification","err","_this$props$notify","settings","Login","login","handleForgotPassword","App","es","basename","layout_AppNavBar","react_router","exact","path","component","layout_Footer","Boolean","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.098cda8f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/job-hero-banner-720W.60a740d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.8b9a5cd1.gif\";","module.exports = __webpack_public_path__ + \"static/media/job-hero-banner-480W.9b2c7ace.jpg\";","module.exports = __webpack_public_path__ + \"static/media/job-hero-banner-320W.9325e4fc.jpg\";","import { NOTIFY_USER } from \"../components/actions/types\";\n\nconst initialState = {\n  message: null,\n  messageType: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case NOTIFY_USER:\n      return {\n        ...state,\n        message: action.message,\n        messageType: action.messageType\n      };\n    default:\n      return state;\n  }\n}\n","import { createStore, combineReducers, compose } from \"redux\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport { reactReduxFirebase, firebaseReducer } from \"react-redux-firebase\";\nimport { reduxFirestore, firestoreReducer } from \"redux-firestore\";\n// Reducers\nimport notifyReducer from \"./reducers/notifyReducer\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyBqyLKGfSDU2-eXcwBuUFw1EYYTEsMCmN0\",\n  authDomain: \"connect-the-x.firebaseapp.com\",\n  databaseURL: \"https://connect-the-x.firebaseio.com\",\n  projectId: \"connect-the-x\",\n  storageBucket: \"connect-the-x.appspot.com\",\n  messagingSenderId: \"401012072513\",\n  appId: \"1:401012072513:web:300f9955d54ad898\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// Init Firestore\nfirebase.firestore();\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: \"users\",\n  useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n};\n\n// Add reactReduxFirebase enhancer when making store creator\nconst createStoreWithFirebase = compose(\n  reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\n  reduxFirestore(firebase) // <- needed if using firestore\n)(createStore);\n\n// Add firebase to reducers\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer, // <- needed if using firestore\n  notify: notifyReducer\n});\n\n// Create store with reducers and initial state\nconst initialState = {};\nconst store = createStoreWithFirebase(\n  rootReducer,\n  initialState,\n  compose(\n    reactReduxFirebase(firebase),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","export const NOTIFY_USER = \"NOTIFY_USER\";\n","import React from \"react\";\nimport spinner from \"../spinner.gif\";\n\nfunction Spinner() {\n  return (\n    <div>\n      <img\n        src={spinner}\n        alt=\"Loading...\"\n        style={{ margin: \"auto\", display: \"block\", width: \"70px\" }}\n      />\n    </div>\n  );\n}\n\nexport default Spinner;\n","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\n//import createHistory from \"history/createBrowserHistory\";\nimport Spinner from \"../components/layout/Spinner\"; // change it to your custom component\n\nconst locationHelper = locationHelperBuilder({});\n//const history = createHistory();\n\nexport const UserIsAuthenticated = connectedRouterRedirect({\n  wrapperDisplayName: \"UserIsAuthenticated\",\n  AuthenticatingComponent: Spinner,\n  allowRedirectBack: true,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || \"/login\",\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\n    !auth.isLoaded || isInitializing === true,\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    auth.isLoaded && !auth.isEmpty\n});\n\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n  wrapperDisplayName: \"UserIsNotAuthenticated\",\n  AuthenticatingComponent: Spinner,\n  allowRedirectBack: false,\n  redirectPath: (state, ownProps) =>\n    locationHelper.getRedirectQueryParam(ownProps) || \"/\",\n  authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\n    !auth.isLoaded || isInitializing === true,\n  authenticatedSelector: ({ firebase: { auth } }) =>\n    auth.isLoaded && auth.isEmpty\n});\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport PropTypes from \"prop-types\";\n\nclass AppNavBar extends Component {\n  state = {\n    isAuthenticated: false\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const { auth } = props;\n    if (auth.uid) {\n      return { isAuthenticated: true };\n    } else {\n      return { isAuthenticated: false };\n    }\n  }\n\n  onLogout = e => {\n    e.preventDefault();\n    //handle logout\n    const { firebase } = this.props;\n\n    firebase\n      .auth()\n      .signOut()\n      .then(signout => this.props.history.push(\"/\"))\n      .catch(error => \"Something went wrong...\");\n\n    return { isAuthenticated: false };\n  };\n\n  render() {\n    const { auth } = this.props;\n    const { isAuthenticated } = this.state;\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-light bg-info mb-4\">\n        <div className=\"container\">\n          <h3>\n            <Link to=\"/\" className=\"nav-brand text-light\">\n              CanaanJobs\n            </Link>\n            {\"      \"}\n          </h3>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarMain\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"navbar-collapse collapse\" id=\"navbarMain\">\n            <ul className=\"navbar-nav ml-auto\">\n              {isAuthenticated ? (\n                <ul className=\"navbar-nav d-flex justify-content-around\">\n                  <li className=\"nav-item text-white nav-link\">{auth.email}</li>\n                  <li className=\"nav-item\">\n                    <Link to=\"/add\" className=\"nav-link text-light\">\n                      Post a job\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <a href=\"!#\" className=\"nav-link text-light\">\n                      Find a job\n                    </a>\n                  </li>\n                  <li className=\"nav-item\">\n                    <a\n                      href=\"!#\"\n                      className=\"nav-link text-light\"\n                      role=\"button\"\n                      onClick={this.onLogout}\n                    >\n                      Logout\n                    </a>\n                  </li>\n                </ul>\n              ) : (\n                <ul className=\"navbar-nav\">\n                  <li className=\"nav-item\">\n                    <Link to=\"/login\" className=\"nav-link text-light\">\n                      Login Now\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to=\"/register\" className=\"nav-link text-light\">\n                      Register\n                    </Link>\n                  </li>\n                </ul>\n              )}\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nAppNavBar.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect((state, props) => ({\n    auth: state.firebase.auth\n  }))\n)(AppNavBar);\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer bg-info\">\n      <div className=\"social-box\">\n        <a\n          href=\"https://www.facebook.com/canaan.jobs\"\n          target=\"_blank\"\n          id=\"facebook\"\n          rel=\"noreferrer noopener\"\n        >\n          <i className=\"fab fa-facebook\" />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nfunction HeroBanner() {\n  return (\n    <div className=\"header\">\n      <h1 className=\"header--primary-text\">FIND YOUR PATH TO SUCCESS</h1>\n    </div>\n  );\n}\n\nexport default HeroBanner;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\n\nclass Job extends Component {\n  handleApplyNow = () => {\n    console.log(\"Apply now clicked\");\n  };\n\n  handleSeeMore = e => {\n    e.preventDefault();\n    console.log(`See more clicked and ${e.id}`);\n  };\n\n  render() {\n    const { jobs } = this.props;\n\n    return (\n      <div className=\"container col-md-9 col-sm-12\">\n        <div className=\"row\">\n          {jobs\n            ? jobs.map(j => {\n                return (\n                  <div className=\"col-md-4 col-sm-6 mb-4\" key={j.id}>\n                    <div className=\"card\">\n                      <div className=\"card-header text-info font-weight-bold\">\n                        {j.jobTitle}\n                      </div>\n                      <div className=\"card-body\">\n                        <strong>{j.hiringCompany}</strong>\n                        <br />\n                        {j.city}, {j.country}\n                        <br />\n                        Salary: RM {j.salary}\n                      </div>\n                    </div>\n                    <input\n                      type=\"button\"\n                      className=\"btn btn-outline-success col-6\"\n                      value=\"Apply Now\"\n                      onClick={this.handleApplyNow}\n                    />\n                    <Link\n                      to={`/job/${j.id}`}\n                      className=\"btn btn-outline-danger col-6\"\n                    >\n                      See More <i className=\"fas fa-info-circle\" />\n                    </Link>\n                  </div>\n                );\n              })\n            : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nJob.propTypes = {\n  firestore: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firestoreConnect([{ collection: \"jobs\" }]),\n  connect(state => ({\n    jobs: state.firestore.ordered.jobs\n  }))\n)(Job);\n","import React from \"react\";\nimport HeroBanner from \"./HeroBanner\";\nimport FeaturedJob from \"./Job\";\n\nfunction Home() {\n  return (\n    <div>\n      <HeroBanner />\n      <FeaturedJob />\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport Spinner from \"./Spinner\";\nimport JobImageLarge from \"../job-hero-banner-720W.jpg\";\nimport JobImageMedium from \"../job-hero-banner-480W.jpg\";\nimport JobImageSmall from \"../job-hero-banner-320W.jpg\";\n\nclass JobDetail extends Component {\n  handleClick = e => {\n    const { job } = this.props;\n    console.log(job.jobTitle);\n  };\n  render() {\n    const { job } = this.props;\n\n    if (job) {\n      return (\n        <div className=\"container col-sm-12 col-md-9 border border-light pt-3\">\n          <div className=\"embed-responsive-4by3 mb-2\">\n            <img\n              srcSet={`${JobImageLarge} 1280w, ${JobImageMedium} 640w, ${JobImageSmall} 320w`}\n              src={JobImageLarge}\n              alt=\"now hiring\"\n            />\n          </div>\n          <div className=\"row mb-2 col-sm-12 col-md-12 pl-0 d-flex justify-content-center\">\n            <h4 className=\"col-sm-8\">\n              <span className=\"text-info\">We are looking for: </span>{\" \"}\n              {job.jobTitle}\n            </h4>\n            <div className=\"col-sm-4 bg-success text-white d-flex flex-column justify-content-center\">\n              Expected salary: RM {job.salary}\n            </div>\n          </div>\n          <div className=\"row col-sm-6 mb-2 text-secondary font-weight-bold\">\n            {job.hiringCompany}\n            {\"  -  \"}\n            {job.city}, {job.country}\n          </div>\n          <div className=\"row col-sm-6 d-flex flex-column\">\n            <h5 className=\"text-info\">Job Description: </h5>\n            <p>{job.jobDescription}</p>\n          </div>\n          <div className=\"row col-sm-6 d-flex flex-column\">\n            <h5 className=\"text-info\">Skills Required: </h5>\n\n            <ul>\n              {job.skillsList ? job.skillsList.map(s => <li>{s}</li>) : null}\n            </ul>\n          </div>\n\n          <button className=\"btn btn-primary mb-5\" onClick={this.handleClick}>\n            Apply now\n          </button>\n        </div>\n      );\n    } else {\n      return <Spinner />;\n    }\n  }\n}\n\nJobDetail.propTypes = {\n  firestore: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firestoreConnect(props => [\n    {\n      collection: \"jobs\",\n      storeAs: \"job\",\n      doc: props.match.params.id\n    }\n  ]),\n  connect(({ firestore: { ordered } }, props) => ({\n    job: ordered.job && ordered.job[0]\n  }))\n)(JobDetail);\n","import React, { Component } from \"react\";\n\nclass AddSkills extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const skillsUI = this.props.skills.map((skill, i) => (\n      <li className=\"list-item mb-1\" key={i}>\n        <input\n          type=\"text\"\n          value={skill}\n          name=\"skill\"\n          onChange={this.props.handleSkillChange(i)}\n          className=\"border border-secondary\"\n        />\n        <i\n          className=\"fas fa-plus ml-2 text-success\"\n          onClick={this.props.handleAddSkill}\n        />\n        <i\n          className=\"fas fa-minus ml-2 text-danger\"\n          onClick={() => this.props.handleDeleteSkill(i)}\n        />\n      </li>\n    ));\n    return (\n      <div>\n        <ul className=\"list-unstyled\">{skillsUI}</ul>\n      </div>\n    );\n  }\n}\n\nexport default AddSkills;\n","import React, { Component } from \"react\";\n//import { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport PropTypes from \"prop-types\";\n\nimport AddSkills from \"./AddSkills\";\n\nclass AddJob extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hiringCompany: \"\",\n      jobTitle: \"\",\n      salary: \"\",\n      city: \"\",\n      country: \"\",\n      jobDescription: \"\",\n      skillsList: [\"\"]\n    };\n  }\n\n  onChange = e => {\n    //handle change in user input\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    //Handle form submit request, data should flow into firestore\n    const newJob = this.state;\n    const { history, firestore } = this.props;\n\n    firestore.add({ collection: \"jobs\" }, newJob).then(() => history.push(\"/\"));\n  };\n\n  // componentDidMount() { //DOESN\"T WORK\n  //   const { companyName } = this.props.profile;\n  //   this.setState({\n  //     companyName\n  //   });\n  //   console.log(companyName);\n  // }\n\n  onSkillChange = key => e => {\n    const newSkillsList = this.state.skillsList.map((skill, skey) => {\n      if (skey !== key) return skill;\n      skill = e.target.value;\n      return skill;\n    });\n    this.setState({\n      skillsList: newSkillsList\n    });\n  };\n\n  addSkill = e => {\n    e.preventDefault();\n    //Add another skill input\n    let newSkillsList = [...this.state.skillsList, \"\"];\n    this.setState({\n      skillsList: newSkillsList\n    });\n  };\n\n  deleteSkill = i => {\n    //handling delete skill\n    if (this.state.skillsList.length > 1) {\n      let deletedSkillsList = this.state.skillsList.filter(\n        (skill, j) => i !== j\n      );\n      this.setState({\n        skillsList: deletedSkillsList\n      });\n    } else {\n      alert(\"Pls insert at least one skill!\");\n    }\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const { hiringCompany } = props.profile;\n    return { hiringCompany };\n  }\n\n  render() {\n    const { hiringCompany } = this.state;\n    return (\n      <div className=\"row col-md-12 mx-auto\">\n        <div className=\"card col-md-10 px-0 mx-auto\">\n          <h2 className=\"card-header\">Post a job</h2>\n          <div className=\"card-body\">\n            <form className=\"d-flex flex-column\" onSubmit={this.onSubmit}>\n              <div className=\"row d-flex justify-content-start\">\n                <div className=\"form-group col-md-3\">\n                  <label htmlFor=\"hiringCompany\">Company Name</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"hiringCompany\"\n                    required\n                    //this ensure the component starts as a controlled component\n                    //& doesn't yield undefined result\n                    value={hiringCompany == null ? \"\" : hiringCompany}\n                    readOnly\n                  />\n                </div>\n                <div className=\"form-group col-md-3\">\n                  <label htmlFor=\"jobTitle\">Job Title</label>\n                  <input\n                    type=\"text\"\n                    id=\"jobTitle\"\n                    className=\"form-control\"\n                    name=\"jobTitle\"\n                    required\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group col-md-3\">\n                  <label htmlFor=\"salary\">Salary</label>\n                  <input\n                    type=\"number\"\n                    id=\"salary\"\n                    className=\"form-control\"\n                    name=\"salary\"\n                    required\n                    onChange={this.onChange}\n                  />\n                </div>\n              </div>\n              <h6>Location</h6>\n              <div className=\"row d-flex justify-content-start\">\n                <div className=\"form-group col-md-3\">\n                  <label htmlFor=\"city\">City</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"city\"\n                    name=\"city\"\n                    required\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group col-md-3\">\n                  <label htmlFor=\"country\">Country</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"country\"\n                    name=\"country\"\n                    required\n                    onChange={this.onChange}\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"form-group col-md-9\">\n                  <label htmlFor=\"jobDescription\">Job Description</label>\n                  <textarea\n                    placeholder=\"Write your requirement for potential candidate...\"\n                    className=\"form-control\"\n                    id=\"jobDescription\"\n                    name=\"jobDescription\"\n                    rows=\"5\"\n                    onChange={this.onChange}\n                  />\n                </div>\n              </div>\n              <div className=\"row\">\n                <div className=\"form-group col-md-6\">\n                  <h6>Skills Requirement</h6>\n                  <AddSkills\n                    skills={this.state.skillsList}\n                    handleSkillChange={this.onSkillChange}\n                    handleAddSkill={this.addSkill}\n                    handleDeleteSkill={this.deleteSkill}\n                  />\n                </div>\n              </div>\n\n              <input\n                className=\"btn btn-info mx-auto\"\n                type=\"submit\"\n                value=\"Post a job\"\n                onClick={this.onSubmit}\n              />\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nAddJob.propTypes = {\n  // add proptype here\n  auth: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firestoreConnect(),\n  connect((state, props) => ({\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }))\n)(AddJob);\n","import { NOTIFY_USER } from \"./types\";\n\nexport const notifyUser = (message, messageType) => {\n  return {\n    type: NOTIFY_USER,\n    message,\n    messageType\n  };\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport { notifyUser } from \"../actions/notifyActions\";\n//import Alert from \"../layout/Alert\";\n\nclass Register extends Component {\n  state = {\n    isCompany: true,\n    isJobSeeker: false,\n    email: \"\",\n    password: \"\"\n  };\n\n  // componentWillMount() {\n  //   const { allowRegistration } = this.props.settings;\n\n  //   // Check if allow registration in settings\n  //   if (!allowRegistration) {\n  //     this.props.history.push(\"/\");\n  //   }\n  // }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n    const { firebase, notifyUser } = this.props;\n\n    // Register with firebase\n    firebase\n      .auth()\n      .createUserWithEmailAndPassword(email, password)\n      .then(success => {\n        var user = firebase.auth().currentUser;\n\n        // Handle redirect after email verified\n        var actionCodeSettings = {\n          url: \"localhost:3000/?email=\" + firebase.auth().currentUser.email,\n          handleCodeInApp: false\n        };\n\n        user\n          .sendEmailVerification(actionCodeSettings)\n          .then(() => {})\n          .catch(err => {\n            notifyUser(\"Verification email failed\", \"error\");\n            console.log(\"Email verification failed\");\n          });\n        this.props.history.push(\"/\");\n      })\n      .catch(err => notifyUser(\"That user already exists\", \"error\"));\n  };\n\n  render() {\n    const { message, messageType } = this.props.notify;\n    return (\n      <div className=\"row register-section\">\n        <div className=\"col-md-4 mx-auto\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              {message ? (\n                <h6 className=\"text-danger\">\n                  {messageType}: {message}\n                </h6>\n              ) : null}\n              <h1 className=\"text-center pb-4 pt-3\">\n                <span className=\"text-info\">\n                  <i className=\"fas fa-lock\" /> Sign Up\n                </span>\n              </h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    required\n                    value={this.state.email}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    required\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Sign up\"\n                  className=\"btn btn-block btn-info\"\n                />\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nRegister.propTypes = {\n  firebase: PropTypes.object.isRequired,\n  notify: PropTypes.object.isRequired,\n  notifyUser: PropTypes.func.isRequired\n  //settings: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(\n    (state, props) => ({\n      notify: state.notify,\n      settings: state.settings\n    }),\n    { notifyUser }\n  )\n)(Register);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport { notifyUser } from \"../actions/notifyActions\";\n//import Alert from \"../layout/Alert\";\n\nclass Login extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  // componentWillMount() {\n  //   const { allowRegistration } = this.props.settings;\n\n  //   // Check if allow registration in settings\n  //   if (!allowRegistration) {\n  //     this.props.history.push(\"/\");\n  //   }\n  // }\n\n  onChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n    const { firebase, notifyUser } = this.props;\n\n    // Register with firebase\n    firebase\n      .login({ email, password })\n      .then(login => this.props.history.push(\"/\"))\n      .catch(err => notifyUser(\"Incorrect login credentials\", \"error\"));\n  };\n\n  handleForgotPassword = e => {\n    e.preventDefault();\n  };\n\n  render() {\n    const { message, messageType } = this.props.notify;\n    return (\n      <div className=\"row login-section\">\n        <div className=\"col-md-4 mx-auto\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              {message ? (\n                <h6 className=\"text-danger\">{`${messageType}: ${message}`}</h6>\n              ) : null}\n              <h1 className=\"text-center pb-4 pt-3\">\n                <span className=\"text-info\">\n                  <i className=\"fas fa-user-ninja\" /> Login Now\n                </span>\n              </h1>\n              <form onSubmit={this.onSubmit}>\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    required\n                    value={this.state.email}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    required\n                    value={this.state.password}\n                    onChange={this.onChange}\n                  />\n                </div>\n                <input\n                  type=\"submit\"\n                  value=\"Login\"\n                  className=\"btn btn-block btn-info\"\n                />\n              </form>\n              <div className=\"mt-2\">\n                <span>\n                  Don't have account?{\" \"}\n                  <Link to=\"/register\"> Register now! </Link>\n                </span>\n                <br />\n                <span>\n                  <a href=\"#!\" onClick={this.handleForgotPassword}>\n                    Forgot password...\n                  </a>\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nLogin.propTypes = {\n  firebase: PropTypes.object.isRequired,\n  notify: PropTypes.object.isRequired,\n  notifyUser: PropTypes.func.isRequired\n  //settings: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(\n    (state, props) => ({\n      notify: state.notify,\n      settings: state.settings\n    }),\n    { notifyUser }\n  )\n)(Login);\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport { UserIsAuthenticated, UserIsNotAuthenticated } from \"./helpers/auth\";\n\nimport AppNavBar from \"./components/layout/AppNavBar\";\nimport Footer from \"./components/layout/Footer\";\nimport Home from \"./components/layout/Home\";\nimport JobDetail from \"./components/layout/JobDetail\";\nimport AddJob from \"./components/layout/AddJob\";\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\n\nimport css from \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router basename=\"/\">\n        <div className=\"App\">\n          <AppNavBar />\n          <div className=\"site-content\">\n            <Switch>\n              <Route exact path=\"/\" component={Home} />\n              <Route exact path=\"/job/:id\" component={JobDetail} />\n              <Route\n                exact\n                path=\"/register\"\n                component={UserIsNotAuthenticated(Register)}\n              />\n              <Route\n                exact\n                path=\"/login\"\n                component={UserIsNotAuthenticated(Login)}\n              />\n              <Route\n                exact\n                path=\"/add\"\n                component={UserIsAuthenticated(AddJob)}\n              />\n            </Switch>\n          </div>\n\n          <Footer />\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}